name: Go Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    environment: Main
    strategy:
      matrix:
        platform: [ android, darwin, linux, windows ]
        arch: [ amd64, arm64 ]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        if: matrix.platform != 'android' || matrix.arch != 'amd64'

      - name: Set up Go
        if: matrix.platform != 'android' || matrix.arch != 'amd64'
        uses: actions/setup-go@v4
        with:
          go-version: '1.25'

      - name: Create Embed Files
        if: matrix.platform != 'android' || matrix.arch != 'amd64'
        env:
          GOOGLE_CLIENT_SECRET: "${{secrets.GOOGLE_CLIENT_SECRET}}"
          INNERTUBE_API_KEY: "${{secrets.INNERTUBE_API_KEY}}"
          SPOTIFY_CLIENT_ID: "${{secrets.SPOTIFY_CLIENT_ID}}"
          SPOTIFY_CLIENT_SECRET: "${{secrets.SPOTIFY_CLIENT_SECRET}}"
        run:
          echo "${GOOGLE_CLIENT_SECRET}" > internal/youtube/google_client_secret.json;
          echo "${INNERTUBE_API_KEY}" > internal/youtube/innertube/innertube_api_key.txt;
          echo "${SPOTIFY_CLIENT_ID}" > internal/spotify/spotify_client_id.txt;
          echo "${SPOTIFY_CLIENT_SECRET}" > internal/spotify/spotify_client_secret.txt;

      - name: Test
        if: matrix.platform != 'android' || matrix.arch != 'amd64'
        run: go test -v -tags generate ./...

      - name: Build
        continue-on-error: true
        if: matrix.platform != 'android' || matrix.arch != 'amd64'
        env:
          CGO_ENABLED: "0"
          GOARCH: "${{ matrix.arch }}"
          GOOS: "${{ matrix.platform }}"
        run:
          go build -v -tags generate -o out/ ./...

      - uses: actions/upload-artifact@v4
        if: matrix.platform != 'android' || matrix.arch != 'amd64'
        with:
          name: binaries-${{ matrix.platform }}-${{ matrix.arch }}
          path: out/*
